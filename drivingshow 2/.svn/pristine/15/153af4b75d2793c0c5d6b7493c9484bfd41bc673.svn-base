//
//  HWPersonalHomeCenterViewController.m
//  HuaWo
//
//  Created by hwawo on 16/12/20.
//  Copyright © 2016年 HW. All rights reserved.
//

#import "HWPersonalHomeCenterViewController.h"
#import "HWHWPersonalHomeCenterViewCell.h"
#import "PersonalInfoViewController.h"
//#import "FullViewController.h"
#import <MJRefresh.h>
#import "GetVideoDataTools.h"
#import "VideoSid.h"
#import "Video.h"
#ifndef Project_URLHeader_h
#define Project_URLHeader_h

#define homeURL @"http://112.124.22.101:28080/alarm/v2/restapi/getIntervalAlarmPage"
#define moreURL @"http://c.m.163.com/nc/video/home/%ld-10.html"
#define listURL @"http://c.3g.163.com/nc/video/list/%@/y/0-10.html"
#define listMoreURL @"http://c.3g.163.com/nc/video/list/%@/y/%ld-10.html"
#endif
@interface HWPersonalHomeCenterViewController ()<UITableViewDelegate, UITableViewDataSource ,FMGVideoPlayViewDelegate, UIAlertViewDelegate>
@property (weak, nonatomic) IBOutlet UITableView *tableView;
@property (weak, nonatomic) IBOutlet UIButton *shareBtn;
@property (weak, nonatomic) IBOutlet UIButton *collectionBtn;
@property (weak, nonatomic) IBOutlet UIButton *commentBtn;

@property (nonatomic, strong) FullViewController *fullVc;
@property (nonatomic, strong) NSArray * videoSidArray; // videoSid数组
@property (nonatomic, strong) NSMutableArray * videoArray; // video数组
@property (nonatomic, strong) FMGVideoPlayView * fmVideoPlayer; // 播放器
@property (nonatomic, weak) HWHWPersonalHomeCenterViewCell *cell;
@property (nonatomic, strong) NSMutableArray * cells;
@property (nonatomic, strong) UIImage *iconImage;
@property (weak, nonatomic) IBOutlet UIButton *iconBtn;

@property (weak, nonatomic) IBOutlet UILabel *nickName;
@property (nonatomic, strong) VideoSid * videoSid;
@property (nonatomic, strong) NSMutableArray * dataArr;
@property (nonatomic,strong) NSMutableArray *textPaths;
@property (strong, nonatomic) UIAlertView *alertReport;
@end
static NSString *cellid = @"personalHomeCenterViewCell";
@implementation HWPersonalHomeCenterViewController
- (NSMutableArray *)cells{

    if (!_cells) {
        _cells = [NSMutableArray array];
    }
    return _cells;
}

- (NSMutableArray *)textPaths{

    if (_textPaths) {
        _textPaths = [NSMutableArray array];
    }
    return _textPaths;
}

- (NSMutableArray *)videoArray{

    if (!_videoArray) {
        _videoArray = [NSMutableArray array];
    }
    return _videoArray;
}
- (IBAction)bianjiBtnClick:(UIButton *)sender {
    
        [[RDVTabBarController shareTabBar] setTabBarHidden:YES animated:NO];
    //    if ([[MemberData memberData] isMemberLogin]) {
    
            PersonalInfoViewController *personInfo = [[PersonalInfoViewController alloc] initWithNibName:@"PersonalInfoViewController" bundle:nil];
            [self.navigationController pushViewController:personInfo animated:YES];

}

- (void)viewDidLoad {
    [super viewDidLoad];
    // Do any additional setup after loading the view from its nib.
    self.collectionBtn.selected = YES;
    [self setUpNav];
    
    [self setUpTableView];
//    self.cell.nickNameLabel.text = deviceNickName;
//    [self setUpHeaderView];
    
//    [DZNotificationCenter addObserver:self selector:@selector(setIconImage:) name:@"iconImageToPersonalHomeVc" object:nil];
    
    [self setUpVideoPlayer];
    
    [self refresh];
    
    
    [self setIconImage];
}

- (void)setIconImage{

    self.nickName.text = deviceNickName;
    NSString *fullPath = [[NSHomeDirectory() stringByAppendingPathComponent:@"Documents"] stringByAppendingPathComponent:[NSString stringWithFormat:@"iconimage%@",identifierForVendor]];
    UIImage *savedImage = [UIImage imageWithContentsOfFile:fullPath];
    
    self.iconImage = savedImage;
    if (!self.iconImage) {
        PersonalInfoViewController *pInfoVc = [[PersonalInfoViewController alloc] init];
        self.iconImage = [pInfoVc downLoadIconImage];
        
        if (!self.iconImage) {
            //默认头像
            [self.iconBtn setImage:[UIImage imageNamed:@"find_new_head_bg"] forState:UIControlStateNormal];
            [self.cell.iconBtn setImage:[UIImage imageNamed:@"find_new_head_bg"] forState:UIControlStateNormal];
//            self.iconCell.accountIconImageView.image = [UIImage imageNamed:@"find_new_head_bg"];
        }
        [self.iconBtn setImage:self.iconImage forState:UIControlStateNormal];
        [self.cell.iconBtn setImage:self.iconImage forState:UIControlStateNormal];
//        self.iconCell.accountIconImageView.image = self.iconImage;
    }else{
        [self.iconBtn setImage:self.iconImage forState:UIControlStateNormal];
        [self.cell.iconBtn setImage:self.iconImage forState:UIControlStateNormal];
//        self.iconCell.accountIconImageView.image = self.iconImage;
        HWLog(@"----%@----PersonalCenterViewController-----savedImage---------%@--%@",fullPath,savedImage,self.iconImage);
    }
    
}

- (void)setUpVideoPlayer{

    self.fmVideoPlayer = [FMGVideoPlayView videoPlayView];// 创建播放器
    self.fmVideoPlayer.delegate = self;
}

- (FullViewController *)fullVc
{
    if (_fullVc == nil) {
        _fullVc = [[FullViewController alloc] init];
    }
    return _fullVc;
}

- (void)videoplayViewSwitchOrientation:(BOOL)isFull{
    if (isFull) {
        [self.navigationController presentViewController:self.fullVc animated:NO completion:^{
            [self.fullVc.view addSubview:self.fmVideoPlayer];
            _fmVideoPlayer.center = self.fullVc.view.center;
            
            [UIView animateWithDuration:0.2 delay:0.0 options:UIViewAnimationOptionLayoutSubviews animations:^{
                _fmVideoPlayer.frame = self.fullVc.view.bounds;
                
                
            } completion:nil];
        }];
    } else {
        [self.fullVc dismissViewControllerAnimated:NO completion:^{
            [self.view addSubview:_fmVideoPlayer];
            _fmVideoPlayer.frame = CGRectMake(0,  275 * _fmVideoPlayer.index + screenW/5 + 50 , screenW, (screenW-20)/2);
        }];
    }
    
}

- (void)readVideoAndPngFile{
    
    NSString *extension = @"text";
    NSFileManager *fileManager = [NSFileManager defaultManager];
    NSArray *paths = NSSearchPathForDirectoriesInDomains(NSDocumentDirectory, NSUserDomainMask, YES);
    NSString *documentsDirectory = [paths objectAtIndex:0];
    
    NSArray *contents = [fileManager contentsOfDirectoryAtPath:documentsDirectory error:nil];
    NSEnumerator *enumerator = [contents objectEnumerator];
    NSString *filename;
    while ((filename = [enumerator nextObject])) {
        if ([[filename pathExtension] isEqualToString:extension]) {
            //            [fileManager removeItemAtPath:[documentsDirectory stringByAppendingPathComponent:filename] error:nil];
            [self.textPaths addObject:[documentsDirectory stringByAppendingPathComponent:filename]];
        }
    }
}

- (void)refresh{
    __unsafe_unretained UITableView *tableView = self.tableView;
    NSString *homeUrl = [NSString stringWithFormat:@"%@",homeURL];
    // 下拉刷新
    tableView.mj_header= [MJRefreshNormalHeader headerWithRefreshingBlock:^{
        [[GetVideoDataTools shareDataTools] getHeardDataWithURL:homeUrl HeardValue:^(NSArray *heardArray, NSArray *videoArray) {
            _videoArray = videoArray;
            
            dispatch_async(dispatch_get_main_queue(), ^{
                [self.tableView reloadData];
                [tableView.mj_header endRefreshing];
            });
        }];
    }];
    // 设置自动切换透明度(在导航栏下面自动隐藏)
    tableView.mj_header.automaticallyChangeAlpha = YES;
    // 上拉刷新
    tableView.mj_footer = [MJRefreshBackNormalFooter footerWithRefreshingBlock:^{
        NSString *URL = [NSString stringWithFormat:moreURL,self.videoArray.count - self.videoArray.count%10];
        [[GetVideoDataTools shareDataTools] getHeardDataWithURL:URL HeardValue:^(NSArray *heardArray, NSArray *videoArray) {
            [self.videoArray addObjectsFromArray:videoArray];
            [[GetVideoDataTools shareDataTools].dataArray addObjectsFromArray:videoArray];
            dispatch_async(dispatch_get_main_queue(), ^{
                [self.tableView reloadData];
                [tableView.mj_header endRefreshing];
            });
        }];
        // 结束刷新
        [tableView.mj_footer endRefreshing];
    }];
    
    
}

- (void)setUpHeaderView:(NSInteger )index{

//    self.videoSidArray = [[NSArray alloc] init];
//    self.videoArray = [[NSMutableArray alloc] init];
//    [[GetVideoDataTools shareDataTools] getHeardDataWithURL:homeURL HeardValue:^(NSArray *heardArray, NSArray *videoArray) {
//        _videoSidArray = heardArray;
//        [self.videoArray addObjectsFromArray:videoArray];
//        dispatch_async(dispatch_get_main_queue(), ^{
//            if (index == 0) {
//              _videoSid = _videoSidArray[0];
//            }else if (index == 1){
//            
//              _videoSid = _videoSidArray[1];
//            }else{
//            
//              _videoSid = _videoSidArray[2];
//            }
//            [self getData];
//        });
//        
//    }];
}

- (void)getData{
//    NSString * url = [NSString stringWithFormat:listURL,_videoSid.sid];
//    self.dataArr = [NSMutableArray array];
//    [[GetVideoDataTools shareDataTools] getListDataWithURL:url ListID:_videoSid.sid ListValue:^(NSArray *listArray) {
//        _videoArray = listArray;
//        dispatch_async(dispatch_get_main_queue(), ^{
//            [self.tableView reloadData];
//        });
//    }];
}

- (void)setUpTableView{
    
    self.tableView.delegate = self;
    self.tableView.dataSource = self;
//    [self.tableView registerClass:[HWHWPersonalHomeCenterViewCell class] forCellReuseIdentifier:cellid];
}

- (void)setUpNav{
    
    self.view.backgroundColor = DZColor(80, 80, 80);
    
    self.navigationItem.leftBarButtonItem = [[UIBarButtonItem alloc] initWithImage:[UIImage imageNamed:@"title_back_icon"] style:UIBarButtonItemStylePlain target:self action:@selector(leftBarButtonItemAction)];
    self.navigationItem.leftBarButtonItem.tintColor = [UIColor whiteColor];
    
    UILabel *titleLabel = [[UILabel alloc] initWithFrame:CGRectMake(0, 0, 150, 44)];
    titleLabel.textColor = [UIColor whiteColor];
    titleLabel.textAlignment = NSTextAlignmentCenter;
    titleLabel.text = NSLocalizedString(@"personal_home", nil);
    self.navigationItem.titleView = titleLabel;
}

- (void)leftBarButtonItemAction {
    
    [self.navigationController popViewControllerAnimated:YES];
    
}

+ (instancetype)personalHomeCenterViewController{

    return [[HWPersonalHomeCenterViewController alloc] initWithNibName:@"HWPersonalHomeCenterViewController" bundle:nil];
}

- (IBAction)shareBtnClick:(UIButton *)sender {
    self.shareBtn.selected = YES;
    self.collectionBtn.selected = NO;
    self.commentBtn.selected = NO;
    [self setUpHeaderView:1];
}
- (IBAction)collectionBtnClick:(UIButton *)sender {
    self.shareBtn.selected = NO;
    self.collectionBtn.selected = YES;
    self.commentBtn.selected = NO;
    [self setUpHeaderView:0];
}
- (IBAction)commentBtn:(UIButton *)sender {
    self.shareBtn.selected = NO;
    self.collectionBtn.selected = NO;
    self.commentBtn.selected = YES;
    [self setUpHeaderView:2];
}

- (NSInteger)numberOfSectionsInTableView:(UITableView *)tableView {
    return 1;
}

- (NSInteger)tableView:(UITableView *)tableView numberOfRowsInSection:(NSInteger)section{
    
    return self.videoArray.count;
}

- (UITableViewCell *)tableView:(UITableView *)tableView cellForRowAtIndexPath:(NSIndexPath *)indexPath{
    
    
    self.cell = [tableView dequeueReusableCellWithIdentifier:@"personalHomeCenterViewCell"];
    if (self.cell == nil) {
        self.cell = [[[NSBundle mainBundle] loadNibNamed:@"HWHWPersonalHomeCenterViewCell" owner:self options:nil] firstObject];
        self.cell.accessoryType = UITableViewCellAccessoryNone;
        self.cell.selectionStyle = UITableViewCellSelectionStyleNone;
    }
    
    self.cell.video = self.videoArray[indexPath.row];
    
//    [self.cell.playButton addTarget:self action:@selector(playButtonAction:) forControlEvents:UIControlEventTouchUpInside];
    self.cell.playButton.tag = 100 + indexPath.row;
    self.cell.nickNameLabel.text = self.nickName.text;
    self.cell.backgroundColor = kBackgroundColor;
    if (!self.iconImage) {
        [self.cell.iconBtn setImage:[UIImage imageNamed:@"find_new_head_bg"] forState:UIControlStateNormal];

    }
    [self.cell.iconBtn setImage:self.iconImage forState:UIControlStateNormal];
    UIButton *delBtn = [UIButton buttonWithType:UIButtonTypeCustom];
    delBtn.x = 0.7*screenW;
    delBtn.y = 5;
    delBtn.width = 100;
    delBtn.height = 30;
    [delBtn setTitle:@"删除" forState:UIControlStateNormal];
    [delBtn setTitleColor:DZColor(0, 204, 204) forState:UIControlStateNormal];
    delBtn.tag = indexPath.row;
    [delBtn addTarget:self action:@selector(deleteVideo:) forControlEvents:UIControlEventTouchUpInside];
    [self.cell.shangView addSubview:delBtn];
//    HWHWPersonalHomeCenterViewCell *cell = [tableView cellForRowAtIndexPath:indexPath]; //根据indexPath准确地取出一行，而不是从cell重用队列中取出
//    if (cell == nil) {
//        cell = [[HWHWPersonalHomeCenterViewCell alloc] initWithStyle:UITableViewCellStyleDefault reuseIdentifier:cellid];
//    }
//    cell.video = self.videoArray[indexPath.row];
//    [cell.playButton addTarget:self action:@selector(playButtonAction:) forControlEvents:UIControlEventTouchUpInside];
//    cell.playButton.tag = 100 + indexPath.row;
//    
//    cell.backgroundColor = kBackgroundColor;
    [self.cells addObject:self.cell];
    return self.cell;
    
   
    
}

- (void)deleteVideo:(UIButton *)btn{

    
    Video *v = self.videoArray[btn.tag];
    NSString *alarmId = [NSString stringWithFormat:@"%@",v.alarm_id];
    NSString *action = @"del_video";
    NSString *tocken = [NSString stringWithFormat:@"%@",identifierForVendor];
    
    NSDictionary *param = @{
                            @"token":tocken,
                            @"action":action,
                            @"para":@{
                                
                                @"id":@[alarmId]
                                }
                            };
    NSString *urlStr = [NSString stringWithFormat:@"http://112.124.22.101:28080/alarm/v2/restapi/doaction"];
    urlStr = [urlStr stringByAddingPercentEscapesUsingEncoding:NSUTF8StringEncoding];
    NSURL *url = [NSURL URLWithString:urlStr];
    
    NSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:url];
    request.HTTPMethod = @"POST";
    
    [request setValue:@"application/json" forHTTPHeaderField:@"Content-Type"];
//    NSString *nowTime = [self timeOfNow];
//    NSString *nickName = deviceNickName;
//    NSString *cidStr = identifierForVendor;
    
    HWLog(@"---dict*%@*",param);
    
    if ([NSJSONSerialization isValidJSONObject:param])
    {
        
        NSData *data = [NSJSONSerialization dataWithJSONObject:param options:NSJSONWritingPrettyPrinted error:nil];
        request.HTTPBody = data;
        self.alertReport = [[UIAlertView alloc] initWithTitle:NSLocalizedString(@"alert_title", nil) message:@"" delegate:self cancelButtonTitle:nil otherButtonTitles:@"确定", nil];
        __typeof(self) __weak safeSelf = self;
        [NSURLConnection sendAsynchronousRequest:request queue:[NSOperationQueue mainQueue] completionHandler:^(NSURLResponse *response, NSData *data, NSError *connectionError) {
            
            if (!connectionError) {
                HWLog(@"datalength:%lu",(unsigned long)data.length);
                //                    HWLog(@"data:%@",data);
                
                
                NSDictionary *dict = [NSJSONSerialization JSONObjectWithData:data options:NSJSONReadingMutableContainers error:nil];
                HWLog(@"deleteVideo==dict[%@]",dict);
                
                NSString * resultNum = [NSString stringWithFormat:@"%@",dict[@"result"]];
                
                if ([resultNum isEqualToString:@"1"]) {
                    
                    dispatch_async(dispatch_get_main_queue(), ^{
                        
//                        [self refresh];
                        self.alertReport.title = @"✅";
                        self.alertReport.message = @"删除成功";
                        [self.alertReport show];
                        
                        
                    });
                }
                
                
            }
            else{
                HWLog(@"deleteVideo==error:%@",connectionError);
                
            }
        }];
    }
    else
    {
        HWLog(@"数据有误");
    }
    
    
    
    
    
    
    
//    // 2. 请求
//    NSURLRequest *request = [NSURLRequest requestWithURL:url cachePolicy:1 timeoutInterval:2.0f];
//    
//    // 3. 连接
//    [NSURLConnection sendAsynchronousRequest:request queue:[NSOperationQueue mainQueue] completionHandler:^(NSURLResponse *response, NSData *data, NSError *connectionError) {
//        
//        if (!connectionError) {
//            // 反序列化
//            NSDictionary *result = [NSJSONSerialization JSONObjectWithData:data options:0 error:NULL];
//            
//            NSLog(@"deleteVideo==result---%@--%@", result,result[@"desc"]);
//            NSString *str0 = [NSString stringWithFormat:@"%@",result[@"desc"]];
//            if ([str0 isEqualToString:@"success"]) {
//                
//                
//            }else {
//                
//                HWLog(@"===================");
//            }
//        }
//        
//    }];
}

- (void)alertView:(UIAlertView *)alertView clickedButtonAtIndex:(NSInteger)buttonIndex
{
    
    if (alertView.tag == 1) {
        [self refresh];
        [self.tableView reloadData];
    }
    
    
}


- (void)playButtonAction:(UIButton *)sender{
    
    _fmVideoPlayer.index = sender.tag - 100;
    Video * video = _videoArray[sender.tag - 100];
    HWLog(@"video==%@%@%@",video,video.alarm_info,video.alarm_info.video_url);
    [_fmVideoPlayer setUrlString:video.alarm_info.video_url];
//    _fmVideoPlayer.frame = CGRectMake(0, 275*(sender.tag - 100) + screenW/5 + 50  , screenW, (self.view.frame.size.width-20)/2);
    _fmVideoPlayer.frame = CGRectMake(0, 100, screenW, self.cell.videoView.height);
    
    _fmVideoPlayer.contrainerViewController = self;
    [_fmVideoPlayer.player play];
    [_fmVideoPlayer showToolView:NO];
    _fmVideoPlayer.playOrPauseBtn.selected = YES;
    _fmVideoPlayer.hidden = NO;
    [self.cell.videoView addSubview:_fmVideoPlayer];
    
}

- (void)tableView:(UITableView *)tableView didEndDisplayingCell:(UITableViewCell *)cell forRowAtIndexPath:(NSIndexPath *)indexPath
{
    if (indexPath.row == _fmVideoPlayer.index) {
        [_fmVideoPlayer.player pause];
        _fmVideoPlayer.hidden = YES;
    }
    
}

- (void)tableView:(UITableView *)tableView didSelectRowAtIndexPath:(NSIndexPath *)indexPath
{
//    [_fmVideoPlayer.player pause];
//    _fmVideoPlayer.hidden = YES;
//    HWVideoViewController *videoController = [HWVideoViewController shareVideoController];
//    videoController.video = self.videoArray[indexPath.row];
//    [self.navigationController pushViewController:videoController animated:YES];
    self.cell = (HWHWPersonalHomeCenterViewCell *)self.cells[indexPath.row];
    _fmVideoPlayer.index = indexPath.row;
    Video * video = _videoArray[indexPath.row];
    HWLog(@"video==%@%@%@",video,video.alarm_info,video.alarm_info.video_url);
    [_fmVideoPlayer setUrlString:video.alarm_info.video_url];
    //    _fmVideoPlayer.frame = CGRectMake(0, 275*(sender.tag - 100) + screenW/5 + 50  , screenW, (self.view.frame.size.width-20)/2);
    _fmVideoPlayer.frame = CGRectMake(0, 40, screenW,self.cell.height - 45);
    
    _fmVideoPlayer.contrainerViewController = self;
    [_fmVideoPlayer.player play];
    [_fmVideoPlayer showToolView:NO];
    _fmVideoPlayer.playOrPauseBtn.selected = YES;
    _fmVideoPlayer.hidden = NO;
    HWLog(@"----self.cell.frame-----%@",NSStringFromCGRect(self.cell.frame));
    [self.cell addSubview:_fmVideoPlayer];
    [self.cell bringSubviewToFront:_fmVideoPlayer];

    HWLog(@"----self.cell.videoView.subviews-----%@",self.cell.subviews);
    HWLog(@"----self.cell.videoView.subviews-----%@",NSStringFromCGRect(_fmVideoPlayer.frame));
    
    
}

- (CGFloat)tableView:(UITableView *)tableView heightForRowAtIndexPath:(NSIndexPath *)indexPath{

    return 195;
}

-(NSString *)timeOfNow{
    NSDate *currentDate = [NSDate date];//获取当前时间，日期
    NSDateFormatter *dateFormatter = [[NSDateFormatter alloc] init];
    [dateFormatter setDateFormat:@"YYYY-MM-dd hh:mm:ss"];
    NSString *dateString = [dateFormatter stringFromDate:currentDate];
    return dateString;
}

- (void)didReceiveMemoryWarning {
    [super didReceiveMemoryWarning];
    // Dispose of any resources that can be recreated.
}

/*
#pragma mark - Navigation

// In a storyboard-based application, you will often want to do a little preparation before navigation
- (void)prepareForSegue:(UIStoryboardSegue *)segue sender:(id)sender {
    // Get the new view controller using [segue destinationViewController].
    // Pass the selected object to the new view controller.
}
*/

@end
